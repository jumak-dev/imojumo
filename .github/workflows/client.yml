name: client
on:
  push:
    branches:
      - dev
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code.
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
        working-directory: ./
      - name: Generate Environment Variables
        run: |
          echo "VITE_API_URL=$VITE_API_URL" >> .env
          echo "VITE_ALADIN_TTBKEY=$VITE_ALADIN_TTBKEY" >> .env
          echo "VITE_ALADIN_URL=$VITE_ALADIN_URL" >> .env
          echo "VITE_GOOGLE_CLIENTID=$VITE_GOOGLE_CLIENTID" >> .env
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_ALADIN_TTBKEY: ${{ secrets.VITE_ALADIN_TTBKEY }}
          VITE_ALADIN_URL: ${{ secrets.VITE_ALADIN_URL }}
          VITE_GOOGLE_CLIENTID: ${{ secrets.VITE_GOOGLE_CLIENTID }}
      - name: Build
        run: npm run build
        working-directory: ./
      - name: Sync Bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true
        run: |
          aws s3 sync \
            --region ap-northeast-2 \
            dist s3://${{ secrets.AWS_S3 }} \
            --delete
        working-directory: ./
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 업로드한 s3 파일을 각 CDN 캐시 무효화하여 리프레시 하기
      - name: CloudFront Invalidation
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_ID }} --paths "/*"
